{"ast":null,"code":"var _jsxFileName = \"/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/CardComments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardComments = ({\n  post\n}) => {\n  _s();\n\n  const usersData = useSelector(state => state.usersReducer);\n  const userData = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-container\",\n    children: post.comments.map((comment, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: comment.commenterId === usersData._id ? \"comment-container client\" : \"comment-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-part\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: !isEmpty(usersData[0]) && usersData.map(user => {\n              if (user._id === post.posterId) return user.picture;else return null;\n            }).join(\"\"),\n            alt: \"poster-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardComments, \"ormBLfShc78Du9AAosKWhRaiJn0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CardComments;\nexport default CardComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardComments\");","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/CardComments.js"],"names":["React","useState","useSelector","useDispatch","CardComments","post","usersData","state","usersReducer","userData","userReducer","dispatch","text","setText","comments","map","comment","i","commenterId","_id","isEmpty","user","posterId","picture","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACjC,QAAMC,SAAS,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA7B;AACA,QAAMC,QAAQ,GAAGP,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACG,WAAlB,CAA5B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,cACGI,IAAI,CAACS,QAAL,CAAcC,GAAd,CAAkB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACjC,0BACE;AACE,QAAA,SAAS,EACPD,OAAO,CAACE,WAAR,KAAwBZ,SAAS,CAACa,GAAlC,GACI,0BADJ,GAEI,mBAJR;AAAA,+BAQE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AACE,YAAA,GAAG,EACD,CAACC,OAAO,CAACd,SAAS,CAAC,CAAD,CAAV,CAAR,IACAA,SAAS,CACNS,GADH,CACQM,IAAD,IAAU;AACb,kBAAIA,IAAI,CAACF,GAAL,KAAad,IAAI,CAACiB,QAAtB,EAAgC,OAAOD,IAAI,CAACE,OAAZ,CAAhC,KACK,OAAO,IAAP;AACN,aAJH,EAKGC,IALH,CAKQ,EALR,CAHJ;AAUE,YAAA,GAAG,EAAC;AAVN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF,SAMOP,CANP;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA1BA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAtCD;;GAAMb,Y;UACcF,W,EACDA,W,EACAC,W;;;KAHbC,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst CardComments = ({ post }) => {\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div className=\"comments-container\">\n      {post.comments.map((comment, i) => {\n        return (\n          <div\n            className={\n              comment.commenterId === usersData._id\n                ? \"comment-container client\"\n                : \"comment-container\"\n            }\n            key={i}\n          >\n            <div className=\"left-part\">\n              <img\n                src={\n                  !isEmpty(usersData[0]) &&\n                  usersData\n                    .map((user) => {\n                      if (user._id === post.posterId) return user.picture;\n                      else return null;\n                    })\n                    .join(\"\")\n                }\n                alt=\"poster-pic\"\n              />\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardComments;\n"]},"metadata":{},"sourceType":"module"}