{"ast":null,"code":"var _jsxFileName = \"/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty, dateParser } from \"../../Util/functions\";\nimport FollowHandler from \"../profil/FollowHandler\";\nimport LikeButton from \"./LikeButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = ({\n  post\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [textUpdate, setTextUpdate] = useState(null);\n  const usersData = useSelector(state => state.usersReducer);\n  const userData = useSelector(state => state.userReducer); //const updateItem = async () => {};\n\n  useEffect(() => {\n    !isEmpty(usersData[0]) && setIsLoading(false);\n  }, [usersData]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card-container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-spinner fa-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: !isEmpty(usersData[0]) && usersData.map(user => {\n            if (user._id === post.posterId) return user.picture;else return null;\n          }).join(\"\"),\n          alt: \"poster-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pseudo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: !isEmpty(usersData[0]) && usersData.map(user => {\n                if (user._id === post.posterId) return user.pseudo;else return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), post.posterId !== userData._id && /*#__PURE__*/_jsxDEV(FollowHandler, {\n              type: \"card\",\n              idToFollow: post.posterId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: dateParser(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), isUpdated === false && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }, this), isUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-post\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            defaultValue: post.message,\n            onChange: event => event.target.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              children: \"Valider les modifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), post.picture && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.picture,\n          alt: \"card-pic\",\n          className: \"card-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), post.video && /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"500\",\n          height: \"300\",\n          src: post.video,\n          frameBorder: \"0\",\n          allow: \"accelerometer ; autoplay; clipboard-write ; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: post._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), userData._id === post.posterId &&\n        /*#__PURE__*/\n        // console.log(\"edit mode\")\n        _jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: \"coucou\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./img/icons/message1.svg\",\n              alt: \"messageicon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.comments.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./img/icons/share.svg\",\n            alt: \"shareicon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, post._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"Kzk2A015WUQAEP/O6ReJ2VOC+9M=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/Card.js"],"names":["React","useState","useEffect","useSelector","isEmpty","dateParser","FollowHandler","LikeButton","Card","post","isLoading","setIsLoading","isUpdated","setIsUpdated","textUpdate","setTextUpdate","usersData","state","usersReducer","userData","userReducer","map","user","_id","posterId","picture","join","pseudo","createdAt","message","event","target","value","video","comments","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty, dateParser } from \"../../Util/functions\";\nimport FollowHandler from \"../profil/FollowHandler\";\nimport LikeButton from \"./LikeButton\";\n\nconst Card = ({ post }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [textUpdate, setTextUpdate] = useState(null);\n\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n\n  //const updateItem = async () => {};\n\n  useEffect(() => {\n    !isEmpty(usersData[0]) && setIsLoading(false);\n  }, [usersData]);\n\n  return (\n    <li className=\"card-container\" key={post._id}>\n      {isLoading ? (\n        <i className=\"fas fa-spinner fa-spin\"></i>\n      ) : (\n        <>\n          <div className=\"card-left\">\n            <img\n              src={\n                !isEmpty(usersData[0]) &&\n                usersData\n                  .map((user) => {\n                    if (user._id === post.posterId) return user.picture;\n                    else return null;\n                  })\n                  .join(\"\")\n              }\n              alt=\"poster-pic\"\n            />\n          </div>\n          <div className=\"card-right\">\n            <div className=\"card-header\">\n              <div className=\"pseudo\">\n                <h3>\n                  {!isEmpty(usersData[0]) &&\n                    usersData.map((user) => {\n                      if (user._id === post.posterId) return user.pseudo;\n                      else return null;\n                    })}\n                </h3>\n                {post.posterId !== userData._id && (\n                  <FollowHandler type=\"card\" idToFollow={post.posterId} />\n                )}\n              </div>\n              <span>{dateParser(post.createdAt)}</span>\n            </div>\n            {isUpdated === false && <p>{post.message}</p>}\n            {isUpdated && (\n              <div className=\"update-post\">\n                <textarea\n                  defaultValue={post.message}\n                  onChange={(event) => event.target.value}\n                />\n                <div className=\"button-container\">\n                  <button className=\"btn\">Valider les modifications</button>\n                </div>\n              </div>\n            )}\n            {post.picture && (\n              <img src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\n            )}\n            {post.video && (\n              <iframe\n                width=\"500\"\n                height=\"300\"\n                src={post.video}\n                frameBorder=\"0\"\n                allow=\"accelerometer ; autoplay; clipboard-write ; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title={post._id}\n              ></iframe>\n            )}\n            {userData._id === post.posterId && (\n              // console.log(\"edit mode\")\n              <div className=\"button-container\">\n                coucou\n                {/* <div onClick={setIsUpdated(true)}>\n                  <img src=\"./img/icons/edit.svg\" alt=\"edit\" />\n                </div> */}\n              </div>\n            )}\n            <div className=\"card-footer\">\n              <div className=\"comment-icon\">\n                <img src=\"./img/icons/message1.svg\" alt=\"messageicon\" />\n                <span>{post.comments.length}</span>\n              </div>\n              <LikeButton post={post} />\n              <img src=\"./img/icons/share.svg\" alt=\"shareicon\" />\n            </div>\n          </div>\n        </>\n      )}\n    </li>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}