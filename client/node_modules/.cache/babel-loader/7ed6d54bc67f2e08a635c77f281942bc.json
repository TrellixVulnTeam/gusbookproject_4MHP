{"ast":null,"code":"import axios from \"axios\"; // posts\n\nexport const GET_POSTS = \"GET_POSTS\";\nexport const LIKE_POST = \"LIKE_POST\";\nexport const UNLIKE_POST = \"UNLIKE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const getPosts = num => {\n  return dispatch => {\n    return axios({\n      method: \"GET\",\n      url: `${process.env.REACT_APP_API_URL}api/post/`\n    }).then(res => {\n      const array = res.data.slice(0, num);\n      dispatch({\n        type: GET_POSTS,\n        playload: array\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n};\nexport const likePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: LIKE_POST,\n        playload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const UnlikePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: UNLIKE_POST,\n        playload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(error => console.log(error));\n  };\n};\n_c = UnlikePost;\nexport const updatePost = (postId, message) => {\n  return dispatch => {\n    return axios({\n      method: \"PUT\",\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n      data: {\n        message\n      }\n    });\n  };\n}; // comments\n\nvar _c;\n\n$RefreshReg$(_c, \"UnlikePost\");","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/actions/post.actions.js"],"names":["axios","GET_POSTS","LIKE_POST","UNLIKE_POST","UPDATE_POST","getPosts","num","dispatch","method","url","process","env","REACT_APP_API_URL","then","res","array","data","slice","type","playload","catch","error","console","likePost","postId","userId","id","log","UnlikePost","updatePost","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAC/B,SAAQC,QAAD,IAAc;AACnB,WAAOP,KAAK,CAAC;AACXQ,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB;AAF3B,KAAD,CAAL,CAIJC,IAJI,CAIEC,GAAD,IAAS;AACb,YAAMC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBX,GAAlB,CAAd;AAEAC,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEjB,SAAR;AAAmBkB,QAAAA,QAAQ,EAAEJ;AAA7B,OAAD,CAAR;AACD,KARI,EASJK,KATI,CASGC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAXI,CAAP;AAYD,GAbD;AAcD,CAfM;AAiBP,OAAO,MAAME,QAAQ,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AAC1C,SAAQlB,QAAD,IAAc;AACnB,WAAOP,KAAK,CAAC;AACXQ,MAAAA,MAAM,EAAE,OADG;AAEXC,MAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,qBAAjC,GAAwDY,MAFlD;AAGXR,MAAAA,IAAI,EAAE;AAAEU,QAAAA,EAAE,EAAED;AAAN;AAHK,KAAD,CAAL,CAKJZ,IALI,CAKEC,GAAD,IAAS;AACbP,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEhB,SAAR;AAAmBiB,QAAAA,QAAQ,EAAE;AAAEK,UAAAA,MAAF;AAAUC,UAAAA;AAAV;AAA7B,OAAD,CAAR;AACD,KAPI,EAQJL,KARI,CAQGC,KAAD,IAAWC,OAAO,CAACK,GAAR,CAAYN,KAAZ,CARb,CAAP;AASD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMO,UAAU,GAAG,CAACJ,MAAD,EAASC,MAAT,KAAoB;AAC5C,SAAQlB,QAAD,IAAc;AACnB,WAAOP,KAAK,CAAC;AACXQ,MAAAA,MAAM,EAAE,OADG;AAEXC,MAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,uBAAjC,GAA0DY,MAFpD;AAGXR,MAAAA,IAAI,EAAE;AAAEU,QAAAA,EAAE,EAAED;AAAN;AAHK,KAAD,CAAL,CAKJZ,IALI,CAKEC,GAAD,IAAS;AACbP,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEf,WAAR;AAAqBgB,QAAAA,QAAQ,EAAE;AAAEK,UAAAA,MAAF;AAAUC,UAAAA;AAAV;AAA/B,OAAD,CAAR;AACD,KAPI,EAQJL,KARI,CAQGC,KAAD,IAAWC,OAAO,CAACK,GAAR,CAAYN,KAAZ,CARb,CAAP;AASD,GAVD;AAWD,CAZM;KAAMO,U;AAcb,OAAO,MAAMC,UAAU,GAAG,CAACL,MAAD,EAASM,OAAT,KAAqB;AAC7C,SAAQvB,QAAD,IAAc;AACnB,WAAOP,KAAK,CAAC;AACXQ,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAWY,MAAO,EAF7C;AAGXR,MAAAA,IAAI,EAAE;AAAEc,QAAAA;AAAF;AAHK,KAAD,CAAZ;AAKD,GAND;AAOD,CARM,C,CAUP","sourcesContent":["import axios from \"axios\";\n\n// posts\n\nexport const GET_POSTS = \"GET_POSTS\";\nexport const LIKE_POST = \"LIKE_POST\";\nexport const UNLIKE_POST = \"UNLIKE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\n\nexport const getPosts = (num) => {\n  return (dispatch) => {\n    return axios({\n      method: \"GET\",\n      url: `${process.env.REACT_APP_API_URL}api/post/`,\n    })\n      .then((res) => {\n        const array = res.data.slice(0, num);\n\n        dispatch({ type: GET_POSTS, playload: array });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n};\n\nexport const likePost = (postId, userId) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\n      data: { id: userId },\n    })\n      .then((res) => {\n        dispatch({ type: LIKE_POST, playload: { postId, userId } });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n\nexport const UnlikePost = (postId, userId) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\n      data: { id: userId },\n    })\n      .then((res) => {\n        dispatch({ type: UNLIKE_POST, playload: { postId, userId } });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n\nexport const updatePost = (postId, message) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PUT\",\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n      data: { message },\n    });\n  };\n};\n\n// comments\n"]},"metadata":{},"sourceType":"module"}