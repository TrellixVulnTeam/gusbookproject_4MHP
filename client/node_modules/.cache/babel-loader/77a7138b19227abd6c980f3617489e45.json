{"ast":null,"code":"import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{isEmpty}from\"../Util/functions\";import{getTrends}from\"../actions/post.actions\";import{NavLink}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Trends=function Trends(){var posts=useSelector(function(state){return state.allPostsReducer;});var usersData=useSelector(function(state){return state.usersReducer;});var trendList=useSelector(function(state){return state.trendingReducer;});var dispatch=useDispatch();useEffect(function(){if(!isEmpty(posts[0])){var postsArray=Object.keys(posts).map(function(i){return posts[i];});var sortedArray=postsArray.sort(function(a,b){return b.likers.length-a.likers.length;});sortedArray.length=3;dispatch(getTrends(sortedArray));}},[posts]);return/*#__PURE__*/_jsxs(\"div\",{className:\"trending-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Trending\"}),/*#__PURE__*/_jsx(NavLink,{exact:true,to:\"/trending\",children:/*#__PURE__*/_jsx(\"ul\",{children:trendList.length&&trendList.map(function(post){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[post.picture&&/*#__PURE__*/_jsx(\"img\",{src:post.picture,alt:\"userPic\"}),post.video&&/*#__PURE__*/_jsx(\"iframe\",{title:\"video\",src:post.video,frameBorder:\"0\",allow:\"acceleromter; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"}),isEmpty(post.picture)&&isEmpty(post.video)&&/*#__PURE__*/_jsx(\"img\",{src:usersData[0]&&usersData.map(function(user){if(user._id===post.posterId){return user.picture;}else{return null;}}).join(\"\"),alt:\"userPict\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"trend-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:post.message}),/*#__PURE__*/_jsx(\"span\",{children:\"Lire\"})]})]},post.id);})})})]});};export default Trends;","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Trends.js"],"names":["React","useEffect","useDispatch","useSelector","isEmpty","getTrends","NavLink","Trends","posts","state","allPostsReducer","usersData","usersReducer","trendList","trendingReducer","dispatch","postsArray","Object","keys","map","i","sortedArray","sort","a","b","likers","length","post","picture","video","user","_id","posterId","join","message","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAASC,SAAT,KAA0B,yBAA1B,CACA,OAASC,OAAT,KAAwB,kBAAxB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,KAAK,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACC,eAAjB,EAAD,CAAzB,CACA,GAAMC,CAAAA,SAAS,CAAGR,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACG,YAAjB,EAAD,CAA7B,CACA,GAAMC,CAAAA,SAAS,CAAGV,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACK,eAAjB,EAAD,CAA7B,CACA,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACd,GAAI,CAACG,OAAO,CAACI,KAAK,CAAC,CAAD,CAAN,CAAZ,CAAwB,CACtB,GAAMQ,CAAAA,UAAU,CAAGC,MAAM,CAACC,IAAP,CAAYV,KAAZ,EAAmBW,GAAnB,CAAuB,SAACC,CAAD,QAAOZ,CAAAA,KAAK,CAACY,CAAD,CAAZ,EAAvB,CAAnB,CACA,GAAIC,CAAAA,WAAW,CAAGL,UAAU,CAACM,IAAX,CAAgB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAC1C,MAAOA,CAAAA,CAAC,CAACC,MAAF,CAASC,MAAT,CAAkBH,CAAC,CAACE,MAAF,CAASC,MAAlC,CACD,CAFiB,CAAlB,CAGAL,WAAW,CAACK,MAAZ,CAAqB,CAArB,CACAX,QAAQ,CAACV,SAAS,CAACgB,WAAD,CAAV,CAAR,CACD,CACF,CATQ,CASN,CAACb,KAAD,CATM,CAAT,CAWA,mBACE,aAAK,SAAS,CAAC,oBAAf,wBACE,gCADF,cAEE,KAAC,OAAD,EAAS,KAAK,KAAd,CAAe,EAAE,CAAC,WAAlB,uBACE,oBACGK,SAAS,CAACa,MAAV,EACCb,SAAS,CAACM,GAAV,CAAc,SAACQ,IAAD,CAAU,CACtB,mBACE,mCACE,uBACGA,IAAI,CAACC,OAAL,eAAgB,YAAK,GAAG,CAAED,IAAI,CAACC,OAAf,CAAwB,GAAG,CAAC,SAA5B,EADnB,CAEGD,IAAI,CAACE,KAAL,eACC,eACE,KAAK,CAAC,OADR,CAEE,GAAG,CAAEF,IAAI,CAACE,KAFZ,CAGE,WAAW,CAAC,GAHd,CAIE,KAAK,CAAC,yFAJR,EAHJ,CAUGzB,OAAO,CAACuB,IAAI,CAACC,OAAN,CAAP,EAAyBxB,OAAO,CAACuB,IAAI,CAACE,KAAN,CAAhC,eACC,YACE,GAAG,CACDlB,SAAS,CAAC,CAAD,CAAT,EACAA,SAAS,CACNQ,GADH,CACO,SAACW,IAAD,CAAU,CACb,GAAIA,IAAI,CAACC,GAAL,GAAaJ,IAAI,CAACK,QAAtB,CAAgC,CAC9B,MAAOF,CAAAA,IAAI,CAACF,OAAZ,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,CAPH,EAQGK,IARH,CAQQ,EARR,CAHJ,CAaE,GAAG,CAAC,UAbN,EAXJ,GADF,cA6BE,aAAK,SAAS,CAAC,eAAf,wBACE,mBAAIN,IAAI,CAACO,OAAT,EADF,cAEE,8BAFF,GA7BF,GAASP,IAAI,CAACQ,EAAd,CADF,CAoCD,CArCD,CAFJ,EADF,EAFF,GADF,CAgDD,CAjED,CAmEA,cAAe5B,CAAAA,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"../Util/functions\";\nimport { getTrends } from \"../actions/post.actions\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Trends = () => {\n  const posts = useSelector((state) => state.allPostsReducer);\n  const usersData = useSelector((state) => state.usersReducer);\n  const trendList = useSelector((state) => state.trendingReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isEmpty(posts[0])) {\n      const postsArray = Object.keys(posts).map((i) => posts[i]);\n      let sortedArray = postsArray.sort((a, b) => {\n        return b.likers.length - a.likers.length;\n      });\n      sortedArray.length = 3;\n      dispatch(getTrends(sortedArray));\n    }\n  }, [posts]);\n\n  return (\n    <div className=\"trending-container\">\n      <h4>Trending</h4>\n      <NavLink exact to=\"/trending\">\n        <ul>\n          {trendList.length &&\n            trendList.map((post) => {\n              return (\n                <li key={post.id}>\n                  <div>\n                    {post.picture && <img src={post.picture} alt=\"userPic\" />}\n                    {post.video && (\n                      <iframe\n                        title=\"video\"\n                        src={post.video}\n                        frameBorder=\"0\"\n                        allow=\"acceleromter; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                      ></iframe>\n                    )}\n                    {isEmpty(post.picture) && isEmpty(post.video) && (\n                      <img\n                        src={\n                          usersData[0] &&\n                          usersData\n                            .map((user) => {\n                              if (user._id === post.posterId) {\n                                return user.picture;\n                              } else {\n                                return null;\n                              }\n                            })\n                            .join(\"\")\n                        }\n                        alt=\"userPict\"\n                      />\n                    )}\n                  </div>\n                  <div className=\"trend-content\">\n                    <p>{post.message}</p>\n                    <span>Lire</span>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Trends;\n"]},"metadata":{},"sourceType":"module"}