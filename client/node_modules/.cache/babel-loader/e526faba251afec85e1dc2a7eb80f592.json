{"ast":null,"code":"import _toConsumableArray from\"/Users/gus/Documents/work_in_progress/gusbook/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/gus/Documents/work_in_progress/gusbook/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_POSTS,LIKE_POST,UNLIKE_POST,UPDATE_POST,DELETE_POST,EDIT_COMMENT,DELETE_COMMENT}from\"../actions/post.actions\";var initialState={};export default function postReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_POSTS:return action.playload;case LIKE_POST:return state.map(function(post){if(post._id===action.playload.postId){return _objectSpread(_objectSpread({},post),{},{likers:[action.playload.userId].concat(_toConsumableArray(post.likers))});}return post;});case UNLIKE_POST:return state.map(function(post){if(post._id===action.playload.postId){return _objectSpread(_objectSpread({},post),{},{likers:post.likers.filter(function(id){return id!==action.playload.userId;})});}return post;});case UPDATE_POST:return state.map(function(post){if(post._id===action.playload.postId){return _objectSpread(_objectSpread({},post),{},{message:action.playload.message});}return post;});case DELETE_POST:return state.filter(function(post){return post._id!==action.playload.postId;});case EDIT_COMMENT:return state.map(function(post){if(post._id===action.playload.postId){return _objectSpread(_objectSpread({},post),{},{comments:post.comments.map(function(comment){if(comment._id===action.playload.commentId){return _objectSpread(_objectSpread({},comment),{},{text:action.playload.text});}else return comment;})});}else return post;});case DELETE_COMMENT:return state.map(function(post){if(post._id===action.playload.postId){return _objectSpread(_objectSpread({},post),{},{comments:post.comments.filter(function(comment){return comment._id!==action.playload.commentId;})});}else return post;});default:return state;}}","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/reducers/post.reducer.js"],"names":["GET_POSTS","LIKE_POST","UNLIKE_POST","UPDATE_POST","DELETE_POST","EDIT_COMMENT","DELETE_COMMENT","initialState","postReducer","state","action","type","playload","map","post","_id","postId","likers","userId","filter","id","message","comments","comment","commentId","text"],"mappings":"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","sourcesContent":["import {\n  GET_POSTS,\n  LIKE_POST,\n  UNLIKE_POST,\n  UPDATE_POST,\n  DELETE_POST,\n  EDIT_COMMENT,\n  DELETE_COMMENT,\n} from \"../actions/post.actions\";\n\nconst initialState = {};\n\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      return action.playload;\n    case LIKE_POST:\n      return state.map((post) => {\n        if (post._id === action.playload.postId) {\n          return {\n            ...post,\n            likers: [action.playload.userId, ...post.likers],\n          };\n        }\n        return post;\n      });\n    case UNLIKE_POST:\n      return state.map((post) => {\n        if (post._id === action.playload.postId) {\n          return {\n            ...post,\n            likers: post.likers.filter((id) => id !== action.playload.userId),\n          };\n        }\n        return post;\n      });\n    case UPDATE_POST:\n      return state.map((post) => {\n        if (post._id === action.playload.postId) {\n          return { ...post, message: action.playload.message };\n        }\n        return post;\n      });\n    case DELETE_POST:\n      return state.filter((post) => post._id !== action.playload.postId);\n    case EDIT_COMMENT:\n      return state.map((post) => {\n        if (post._id === action.playload.postId) {\n          return {\n            ...post,\n            comments: post.comments.map((comment) => {\n              if (comment._id === action.playload.commentId) {\n                return {\n                  ...comment,\n                  text: action.playload.text,\n                };\n              } else return comment;\n            }),\n          };\n        } else return post;\n      });\n    case DELETE_COMMENT:\n      return state.map((post) => {\n        if (post._id === action.playload.postId) {\n          return {\n            ...post,\n            comments: post.comments.filter(\n              (comment) => comment._id !== action.playload.commentId\n            ),\n          };\n        } else return post;\n      });\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}