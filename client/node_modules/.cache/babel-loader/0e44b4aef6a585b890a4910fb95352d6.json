{"ast":null,"code":"import axios from \"axios\";\nexport const GET_USER = \"GET_USER\";\nexport const UPLOAD_PICTURE = \"UPLOAD_PICTURE\";\nexport const UPDATE_BIO = \"UPDATE_BIO\";\nexport const FOLLOW_USER = \"FOLLOW_USER\";\nexport const UNFOLLOW_USER = \"UNFOLLOW_USER\";\nexport const getUser = uid => {\n  return dispatch => {\n    return axios.get(`${process.env.REACT_APP_API_URL}api/user/${uid}`).then(res => {\n      dispatch({\n        type: GET_USER,\n        playload: res.data\n      });\n    }).catch(error => {\n      console.log(\"error dispatch GET_USER\" + error);\n    });\n  };\n};\nexport const uploadPicture = (data, id) => {\n  return dispatch => {\n    return axios.post(`${process.env.REACT_APP_API_URL}api/user/upload`, data).then(res => {\n      return axios.get(`${process.env.REACT_APP_API_URL}api/user/${id}`).then(res => {\n        dispatch({\n          type: UPLOAD_PICTURE,\n          playload: res.data.picture\n        });\n      });\n    }).catch(error => console.log(\"error dispatch\"));\n  };\n};\nexport const updateBio = (userId, bio) => {\n  return dispatch => {\n    return axios({\n      method: \"PUT\",\n      url: `${process.env.REACT_APP_API_URL}api/user/` + userId,\n      data: {\n        bio\n      }\n    }).then(res => {\n      dispatch({\n        type: UPDATE_BIO,\n        playload: bio\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const followUser = (followerId, idToFollow) => {\n  return dispatch => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/user/follow/` + followerId,\n      data: {\n        idToFollow\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/actions/user.actions.js"],"names":["axios","GET_USER","UPLOAD_PICTURE","UPDATE_BIO","FOLLOW_USER","UNFOLLOW_USER","getUser","uid","dispatch","get","process","env","REACT_APP_API_URL","then","res","type","playload","data","catch","error","console","log","uploadPicture","id","post","picture","updateBio","userId","bio","method","url","followUser","followerId","idToFollow"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,OAAO,GAAIC,GAAD,IAAS;AAC9B,SAAQC,QAAD,IAAc;AACnB,WAAOR,KAAK,CACTS,GADI,CACC,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAWL,GAAI,EADhD,EAEJM,IAFI,CAEEC,GAAD,IAAS;AACbN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEd,QAAR;AAAkBe,QAAAA,QAAQ,EAAEF,GAAG,CAACG;AAAhC,OAAD,CAAR;AACD,KAJI,EAKJC,KALI,CAKGC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BF,KAAxC;AACD,KAPI,CAAP;AAQD,GATD;AAUD,CAXM;AAaP,OAAO,MAAMG,aAAa,GAAG,CAACL,IAAD,EAAOM,EAAP,KAAc;AACzC,SAAQf,QAAD,IAAc;AACnB,WAAOR,KAAK,CACTwB,IADI,CACE,GAAEd,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBADlC,EACoDK,IADpD,EAEJJ,IAFI,CAEEC,GAAD,IAAS;AACb,aAAOd,KAAK,CACTS,GADI,CACC,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAAWW,EAAG,EAD/C,EAEJV,IAFI,CAEEC,GAAD,IAAS;AACbN,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAEb,cAAR;AAAwBc,UAAAA,QAAQ,EAAEF,GAAG,CAACG,IAAJ,CAASQ;AAA3C,SAAD,CAAR;AACD,OAJI,CAAP;AAKD,KARI,EASJP,KATI,CASGC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CATb,CAAP;AAUD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMK,SAAS,GAAG,CAACC,MAAD,EAASC,GAAT,KAAiB;AACxC,SAAQpB,QAAD,IAAc;AACnB,WAAOR,KAAK,CAAC;AACX6B,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAG,GAAEpB,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WAAjC,GAA8Ce,MAFxC;AAGXV,MAAAA,IAAI,EAAE;AAAEW,QAAAA;AAAF;AAHK,KAAD,CAAL,CAKJf,IALI,CAKEC,GAAD,IAAS;AACbN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEZ,UADC;AAEPa,QAAAA,QAAQ,EAAEY;AAFH,OAAD,CAAR;AAID,KAVI,EAWJV,KAXI,CAWGC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXb,CAAP;AAYD,GAbD;AAcD,CAfM;AAiBP,OAAO,MAAMY,UAAU,GAAG,CAACC,UAAD,EAAaC,UAAb,KAA4B;AACpD,SAAQzB,QAAD,IAAc;AACnB,WAAOR,KAAK,CAAC;AACX6B,MAAAA,MAAM,EAAE,OADG;AAEXC,MAAAA,GAAG,EAAG,GAAEpB,OAAO,CAACC,GAAR,CAAYC,iBAAkB,kBAAjC,GAAqDoB,UAF/C;AAGXf,MAAAA,IAAI,EAAE;AAAEgB,QAAAA;AAAF;AAHK,KAAD,CAAZ;AAKD,GAND;AAOD,CARM","sourcesContent":["import axios from \"axios\";\n\nexport const GET_USER = \"GET_USER\";\nexport const UPLOAD_PICTURE = \"UPLOAD_PICTURE\";\nexport const UPDATE_BIO = \"UPDATE_BIO\";\nexport const FOLLOW_USER = \"FOLLOW_USER\";\nexport const UNFOLLOW_USER = \"UNFOLLOW_USER\";\n\nexport const getUser = (uid) => {\n  return (dispatch) => {\n    return axios\n      .get(`${process.env.REACT_APP_API_URL}api/user/${uid}`)\n      .then((res) => {\n        dispatch({ type: GET_USER, playload: res.data });\n      })\n      .catch((error) => {\n        console.log(\"error dispatch GET_USER\" + error);\n      });\n  };\n};\n\nexport const uploadPicture = (data, id) => {\n  return (dispatch) => {\n    return axios\n      .post(`${process.env.REACT_APP_API_URL}api/user/upload`, data)\n      .then((res) => {\n        return axios\n          .get(`${process.env.REACT_APP_API_URL}api/user/${id}`)\n          .then((res) => {\n            dispatch({ type: UPLOAD_PICTURE, playload: res.data.picture });\n          });\n      })\n      .catch((error) => console.log(\"error dispatch\"));\n  };\n};\n\nexport const updateBio = (userId, bio) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PUT\",\n      url: `${process.env.REACT_APP_API_URL}api/user/` + userId,\n      data: { bio },\n    })\n      .then((res) => {\n        dispatch({\n          type: UPDATE_BIO,\n          playload: bio,\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n\nexport const followUser = (followerId, idToFollow) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/user/follow/` + followerId,\n      data: { idToFollow },\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}