{"ast":null,"code":"var _jsxFileName = \"/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/EditDeleteComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport UidContext from \"../AppContext\";\nimport { useDispatch } from \"react-redux\";\nimport { editComment } from \"../../actions/post.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDeleteComment = ({\n  comment,\n  postId\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isAuthor, setIsAuthor] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [text, setText] = useState(false);\n  const uid = useContext(UidContext);\n\n  const handleEdit = event => {\n    event.preventDefault();\n\n    if (text) {\n      dispatch(editComment(postId, comment._id, text));\n    }\n  };\n\n  useEffect(() => {\n    const checkAuthor = () => {\n      if (uid === comment.commenterId) {\n        setIsAuthor(true);\n      }\n    };\n\n    checkAuthor();\n  }, [uid, comment.commenterId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-comment\",\n    children: [isAuthor && edit === false && /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => setEdit(!edit),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./img/icons/edit.svg\",\n        alt: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), isAuthor && edit && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEdit,\n      action: \"\",\n      className: \"edit-comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        onClick: () => setEdit(!edit),\n        children: \"Editer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        onChange: event => setText(event.target.value),\n        defaultValue: comment.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Valider modifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditDeleteComment, \"hb2DrdGH4ax8NzKr+nHxYeKZtAE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditDeleteComment;\nexport default EditDeleteComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeleteComment\");","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/EditDeleteComment.js"],"names":["React","useState","useContext","useEffect","UidContext","useDispatch","editComment","EditDeleteComment","comment","postId","dispatch","isAuthor","setIsAuthor","edit","setEdit","text","setText","uid","handleEdit","event","preventDefault","_id","checkAuthor","commenterId","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AAAA;;AACjD,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMgB,GAAG,GAAGf,UAAU,CAACE,UAAD,CAAtB;;AAEA,QAAMc,UAAU,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIL,IAAJ,EAAU;AACRL,MAAAA,QAAQ,CAACJ,WAAW,CAACG,MAAD,EAASD,OAAO,CAACa,GAAjB,EAAsBN,IAAtB,CAAZ,CAAR;AACD;AACF,GALD;;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,WAAW,GAAG,MAAM;AACxB,UAAIL,GAAG,KAAKT,OAAO,CAACe,WAApB,EAAiC;AAC/BX,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAJD;;AAKAU,IAAAA,WAAW;AACZ,GAPQ,EAON,CAACL,GAAD,EAAMT,OAAO,CAACe,WAAd,CAPM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,eACGZ,QAAQ,IAAIE,IAAI,KAAK,KAArB,iBACC;AAAM,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CAA5B;AAAA,6BACE;AAAK,QAAA,GAAG,EAAC,sBAAT;AAAgC,QAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMGF,QAAQ,IAAIE,IAAZ,iBACC;AAAM,MAAA,QAAQ,EAAEK,UAAhB;AAA4B,MAAA,MAAM,EAAC,EAAnC;AAAsC,MAAA,SAAS,EAAC,mBAAhD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAsB,QAAA,OAAO,EAAE,MAAMJ,OAAO,CAAC,CAACD,IAAF,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAGM,KAAD,IAAWH,OAAO,CAACG,KAAK,CAACK,MAAN,CAAaC,KAAd,CAH9B;AAIE,QAAA,YAAY,EAAEjB,OAAO,CAACO;AAJxB;AAAA;AAAA;AAAA;AAAA,cALF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA/CD;;GAAMR,iB;UACaF,W;;;KADbE,iB;AAiDN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport UidContext from \"../AppContext\";\nimport { useDispatch } from \"react-redux\";\nimport { editComment } from \"../../actions/post.actions\";\n\nconst EditDeleteComment = ({ comment, postId }) => {\n  const dispatch = useDispatch();\n  const [isAuthor, setIsAuthor] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [text, setText] = useState(false);\n  const uid = useContext(UidContext);\n\n  const handleEdit = (event) => {\n    event.preventDefault();\n    if (text) {\n      dispatch(editComment(postId, comment._id, text));\n    }\n  };\n\n  useEffect(() => {\n    const checkAuthor = () => {\n      if (uid === comment.commenterId) {\n        setIsAuthor(true);\n      }\n    };\n    checkAuthor();\n  }, [uid, comment.commenterId]);\n  return (\n    <div className=\"edit-comment\">\n      {isAuthor && edit === false && (\n        <span onClick={() => setEdit(!edit)}>\n          <img src=\"./img/icons/edit.svg\" alt=\"edit\" />\n        </span>\n      )}\n      {isAuthor && edit && (\n        <form onSubmit={handleEdit} action=\"\" className=\"edit-comment-form\">\n          <label htmlFor=\"text\" onClick={() => setEdit(!edit)}>\n            Editer\n          </label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"text\"\n            onChange={(event) => setText(event.target.value)}\n            defaultValue={comment.text}\n          />\n          <br />\n          <input type=\"submit\" value=\"Valider modifications\" />\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default EditDeleteComment;\n"]},"metadata":{},"sourceType":"module"}