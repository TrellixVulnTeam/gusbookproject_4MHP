{"ast":null,"code":"export function capitalize(string) {\n  return string ? string.charAt(0).toUpperCase() + string.slice(1) : null;\n}\nexport function dateParser(date) {\n  let options = {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\"\n  };\n  let timestamp = Date.parse(date);\n  let result = new Date(timestamp).toLocaleDateString(\"fr-FR\", options);\n  return result.toString();\n}\nexport function isEmpty(value) {\n  var isEmptyObject = function (a) {\n    if (typeof a.length === \"undefined\") {\n      // it's an Object, not an Array\n      var hasNonempty = Object.keys(a).some(function nonEmpty(element) {\n        return !isEmpty(a[element]);\n      });\n      return hasNonempty ? false : isEmptyObject(Object.keys(a));\n    }\n\n    return !a.some(function nonEmpty(element) {\n      // check if array is really not empty as JS thinks\n      return !isEmpty(element); // at least one element should be non-empty\n    });\n  };\n\n  return value == false || typeof value === \"undefined\" || value == null || typeof value === \"object\" && isEmptyObject(value);\n}","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/Util/functions.js"],"names":["capitalize","string","charAt","toUpperCase","slice","dateParser","date","options","hour","minute","second","weekday","year","month","day","timestamp","Date","parse","result","toLocaleDateString","toString","isEmpty","value","isEmptyObject","a","length","hasNonempty","Object","keys","some","nonEmpty","element"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAOA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAApC,GAAsD,IAAnE;AACD;AAED,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,MAAIC,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAE,SADM;AAEZC,IAAAA,MAAM,EAAE,SAFI;AAGZC,IAAAA,MAAM,EAAE,SAHI;AAIZC,IAAAA,OAAO,EAAE,MAJG;AAKZC,IAAAA,IAAI,EAAE,SALM;AAMZC,IAAAA,KAAK,EAAE,OANK;AAOZC,IAAAA,GAAG,EAAE;AAPO,GAAd;AASA,MAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWX,IAAX,CAAhB;AACA,MAAIY,MAAM,GAAG,IAAIF,IAAJ,CAASD,SAAT,EAAoBI,kBAApB,CAAuC,OAAvC,EAAgDZ,OAAhD,CAAb;AAEA,SAAOW,MAAM,CAACE,QAAP,EAAP;AACD;AAED,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAa;AAC/B,QAAI,OAAOA,CAAC,CAACC,MAAT,KAAoB,WAAxB,EAAqC;AACnC;AACA,UAAIC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,EAAeK,IAAf,CAAoB,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AAC/D,eAAO,CAACV,OAAO,CAACG,CAAC,CAACO,OAAD,CAAF,CAAf;AACD,OAFiB,CAAlB;AAGA,aAAOL,WAAW,GAAG,KAAH,GAAWH,aAAa,CAACI,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAD,CAA1C;AACD;;AAED,WAAO,CAACA,CAAC,CAACK,IAAF,CAAO,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACxC;AACA,aAAO,CAACV,OAAO,CAACU,OAAD,CAAf,CAFwC,CAEd;AAC3B,KAHO,CAAR;AAID,GAbD;;AAcA,SACET,KAAK,IAAI,KAAT,IACA,OAAOA,KAAP,KAAiB,WADjB,IAEAA,KAAK,IAAI,IAFT,IAGC,OAAOA,KAAP,KAAiB,QAAjB,IAA6BC,aAAa,CAACD,KAAD,CAJ7C;AAMD","sourcesContent":["export function capitalize(string) {\n  return string ? string.charAt(0).toUpperCase() + string.slice(1) : null;\n}\n\nexport function dateParser(date) {\n  let options = {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  };\n  let timestamp = Date.parse(date);\n  let result = new Date(timestamp).toLocaleDateString(\"fr-FR\", options);\n\n  return result.toString();\n}\n\nexport function isEmpty(value) {\n  var isEmptyObject = function (a) {\n    if (typeof a.length === \"undefined\") {\n      // it's an Object, not an Array\n      var hasNonempty = Object.keys(a).some(function nonEmpty(element) {\n        return !isEmpty(a[element]);\n      });\n      return hasNonempty ? false : isEmptyObject(Object.keys(a));\n    }\n\n    return !a.some(function nonEmpty(element) {\n      // check if array is really not empty as JS thinks\n      return !isEmpty(element); // at least one element should be non-empty\n    });\n  };\n  return (\n    value == false ||\n    typeof value === \"undefined\" ||\n    value == null ||\n    (typeof value === \"object\" && isEmptyObject(value))\n  );\n}\n"]},"metadata":{},"sourceType":"module"}