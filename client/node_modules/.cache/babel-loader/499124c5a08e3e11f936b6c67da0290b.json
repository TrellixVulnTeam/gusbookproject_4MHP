{"ast":null,"code":"import axios from \"axios\"; // posts\n\nexport const GET_POSTS = \"GET_POSTS\";\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";\nexport const ADD_POST = \"ADD_POST\";\nexport const LIKE_POST = \"LIKE_POST\";\nexport const UNLIKE_POST = \"UNLIKE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DELETE_POST = \"DELETE_POST\"; // comments\n\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\"; //trends\n\nexport const GET_TRENDS = \"GET_TRENDS\"; //errors\n\nexport const GET_POST_ERRORS = \"GET_POST_ERRORS\";\nexport const getPosts = num => {\n  return dispatch => {\n    return axios({\n      method: \"GET\",\n      url: `${process.env.REACT_APP_API_URL}api/post/`\n    }).then(res => {\n      const array = res.data.slice(0, num);\n      dispatch({\n        type: GET_POSTS,\n        playload: array\n      });\n      dispatch({\n        type: GET_ALL_POSTS,\n        playload: res.data\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n};\nexport const addPost = data => {\n  return dispatch => {\n    console.log(\"addpost action\"); //return axios.post(`${process.env.REACT_APP_API_URL}api/post/`, data);\n\n    return axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_API_URL}api/post/`,\n      data: data\n    }).then(res => {\n      console.log(res.data);\n\n      if (res.data) {\n        dispatch({\n          type: GET_POST_ERRORS,\n          playload: res.data\n        });\n      } else {\n        dispatch({\n          type: GET_POST_ERRORS,\n          playload: \"\"\n        });\n      }\n    });\n  };\n};\nexport const likePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: LIKE_POST,\n        playload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const UnlikePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: UNLIKE_POST,\n        playload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(error => console.log(error));\n  };\n};\n_c = UnlikePost;\nexport const updatePost = (postId, message) => {\n  return dispatch => {\n    return axios({\n      method: \"PUT\",\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n      data: {\n        message\n      }\n    }).then(res => {\n      dispatch({\n        type: UPDATE_POST,\n        playload: {\n          message,\n          postId\n        }\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const deletePost = postId => {\n  return dispatch => {\n    return axios({\n      method: \"DELETE\",\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`\n    }).then(res => {\n      dispatch({\n        type: DELETE_POST,\n        playload: {\n          postId\n        }\n      });\n    }).catch(error => console.log(error));\n  };\n}; // comments\n\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\n  return dispatch => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/comment-post/${postId}`,\n      data: {\n        commenterId,\n        text,\n        commenterPseudo\n      }\n    }).then(res => {\n      dispatch({\n        type: ADD_COMMENT,\n        playload: {\n          postId\n        }\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const editComment = (postId, commentId, text) => {\n  return dispatch => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/edit-comment-post/${postId}`,\n      data: {\n        commentId,\n        text\n      }\n    }).then(res => {\n      dispatch({\n        type: EDIT_COMMENT,\n        playload: {\n          postId,\n          commentId,\n          text\n        }\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const deleteComment = (postId, commentId) => {\n  return dispatch => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/delete-comment-post/${postId}`,\n      data: {\n        commentId\n      }\n    }).then(res => {\n      dispatch({\n        type: DELETE_COMMENT,\n        playload: {\n          postId,\n          commentId\n        }\n      });\n    }).catch(error => console.log(error));\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UnlikePost\");","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/actions/post.actions.js"],"names":["axios","GET_POSTS","GET_ALL_POSTS","ADD_POST","LIKE_POST","UNLIKE_POST","UPDATE_POST","DELETE_POST","ADD_COMMENT","EDIT_COMMENT","DELETE_COMMENT","GET_TRENDS","GET_POST_ERRORS","getPosts","num","dispatch","method","url","process","env","REACT_APP_API_URL","then","res","array","data","slice","type","playload","catch","error","console","addPost","log","likePost","postId","userId","id","UnlikePost","updatePost","message","deletePost","addComment","commenterId","text","commenterPseudo","editComment","commentId","deleteComment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n// posts\n\nexport const GET_POSTS = \"GET_POSTS\";\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";\nexport const ADD_POST = \"ADD_POST\";\n\nexport const LIKE_POST = \"LIKE_POST\";\nexport const UNLIKE_POST = \"UNLIKE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\n\n// comments\n\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\n\n//trends\n\nexport const GET_TRENDS = \"GET_TRENDS\";\n\n//errors\n\nexport const GET_POST_ERRORS = \"GET_POST_ERRORS\";\n\nexport const getPosts = (num) => {\n  return (dispatch) => {\n    return axios({\n      method: \"GET\",\n      url: `${process.env.REACT_APP_API_URL}api/post/`,\n    })\n      .then((res) => {\n        const array = res.data.slice(0, num);\n        dispatch({ type: GET_POSTS, playload: array });\n        dispatch({ type: GET_ALL_POSTS, playload: res.data });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n};\n\nexport const addPost = (data) => {\n  return (dispatch) => {\n    console.log(\"addpost action\");\n    //return axios.post(`${process.env.REACT_APP_API_URL}api/post/`, data);\n    return axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_API_URL}api/post/`,\n      data: data,\n    }).then((res) => {\n      console.log(res.data);\n      if (res.data) {\n        dispatch({ type: GET_POST_ERRORS, playload: res.data });\n      } else {\n        dispatch({ type: GET_POST_ERRORS, playload: \"\" });\n      }\n    });\n  };\n};\n\nexport const likePost = (postId, userId) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\n      data: { id: userId },\n    })\n      .then((res) => {\n        dispatch({ type: LIKE_POST, playload: { postId, userId } });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n\nexport const UnlikePost = (postId, userId) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\n      data: { id: userId },\n    })\n      .then((res) => {\n        dispatch({ type: UNLIKE_POST, playload: { postId, userId } });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n\nexport const updatePost = (postId, message) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PUT\",\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n      data: { message },\n    })\n      .then((res) => {\n        dispatch({ type: UPDATE_POST, playload: { message, postId } });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n\nexport const deletePost = (postId) => {\n  return (dispatch) => {\n    return axios({\n      method: \"DELETE\",\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n    })\n      .then((res) => {\n        dispatch({ type: DELETE_POST, playload: { postId } });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n// comments\n\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/comment-post/${postId}`,\n      data: { commenterId, text, commenterPseudo },\n    })\n      .then((res) => {\n        dispatch({ type: ADD_COMMENT, playload: { postId } });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n\nexport const editComment = (postId, commentId, text) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/edit-comment-post/${postId}`,\n      data: { commentId, text },\n    })\n      .then((res) => {\n        dispatch({ type: EDIT_COMMENT, playload: { postId, commentId, text } });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n\nexport const deleteComment = (postId, commentId) => {\n  return (dispatch) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${process.env.REACT_APP_API_URL}api/post/delete-comment-post/${postId}`,\n      data: { commentId },\n    })\n      .then((res) => {\n        dispatch({ type: DELETE_COMMENT, playload: { postId, commentId } });\n      })\n      .catch((error) => console.log(error));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}