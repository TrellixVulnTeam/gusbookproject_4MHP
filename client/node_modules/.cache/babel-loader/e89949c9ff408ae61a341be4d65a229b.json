{"ast":null,"code":"var _jsxFileName = \"/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/CardComments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isEmpty, timestampParser } from \"../../Util/functions\";\nimport FollowHandler from \"../../components/profil/FollowHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardComments = ({\n  post\n}) => {\n  _s();\n\n  const usersData = useSelector(state => state.usersReducer);\n  const userData = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  const [text, setText] = useState(\"\");\n\n  const handleComment = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-container\",\n    children: [post.comments.map((comment, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: comment.commenterId === usersData._id ? \"comment-container client\" : \"comment-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-part\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: !isEmpty(usersData[0]) && usersData.map(userFromUsers => {\n              if (userFromUsers._id === comment.commenterId) return userFromUsers.picture;else return null;\n            }).join(\"\"),\n            alt: \"commenter-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-part\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pseudo\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: comment.commenterPseudo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), comment.commenterId !== userData._id && /*#__PURE__*/_jsxDEV(FollowHandler, {\n                idToFollow: comment.commenterId,\n                type: \"card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: timestampParser(comment.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this);\n    }), userData._id && /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleComment,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        onChange: event => setText(event.target.value),\n        value: text,\n        placeholder: \"Laisser un commentaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardComments, \"ormBLfShc78Du9AAosKWhRaiJn0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CardComments;\nexport default CardComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardComments\");","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/CardComments.js"],"names":["React","useState","useSelector","useDispatch","isEmpty","timestampParser","FollowHandler","CardComments","post","usersData","state","usersReducer","userData","userReducer","dispatch","text","setText","handleComment","comments","map","comment","i","commenterId","_id","userFromUsers","picture","join","commenterPseudo","timestamp","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isEmpty, timestampParser } from \"../../Util/functions\";\nimport FollowHandler from \"../../components/profil/FollowHandler\";\n\nconst CardComments = ({ post }) => {\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const [text, setText] = useState(\"\");\n  const handleComment = () => {};\n\n  return (\n    <div className=\"comments-container\">\n      {post.comments.map((comment, i) => {\n        return (\n          <div\n            className={\n              comment.commenterId === usersData._id\n                ? \"comment-container client\"\n                : \"comment-container\"\n            }\n            key={i}\n          >\n            <div className=\"left-part\">\n              <img\n                src={\n                  !isEmpty(usersData[0]) &&\n                  usersData\n                    .map((userFromUsers) => {\n                      if (userFromUsers._id === comment.commenterId)\n                        return userFromUsers.picture;\n                      else return null;\n                    })\n                    .join(\"\")\n                }\n                alt=\"commenter-pic\"\n              />\n            </div>\n            <div className=\"right-part\">\n              <div className=\"comment-header\">\n                <div className=\"pseudo\">\n                  <h3>{comment.commenterPseudo}</h3>\n                  {comment.commenterId !== userData._id && (\n                    <FollowHandler\n                      idToFollow={comment.commenterId}\n                      type=\"card\"\n                    />\n                  )}\n                </div>\n                <span>{timestampParser(comment.timestamp)}</span>\n              </div>\n              <p>{comment.text}</p>\n            </div>\n          </div>\n        );\n      })}\n      {userData._id && (\n        <form action=\"\" onSubmit={handleComment} className=\"comment-form\">\n          <input\n            type=\"text\"\n            name=\"text\"\n            onChange={(event) => setText(event.target.value)}\n            value={text}\n            placeholder=\"Laisser un commentaire\"\n          />\n          <br />\n          {/* <input type=\"submit\">Envoyer</input> */}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default CardComments;\n"]},"metadata":{},"sourceType":"module"}