{"ast":null,"code":"var _jsxFileName = \"/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty, dateParser } from \"../../Util/functions\";\nimport FollowHandler from \"../profil/FollowHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = ({\n  post\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const usersData = useSelector(state => state.usersReducer);\n  const userData = useSelector(state => state.userReducer);\n  useEffect(() => {\n    !isEmpty(usersData[0]) && setIsLoading(false);\n  }, [usersData]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card-container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-spinner fa-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: !isEmpty(usersData[0]) && usersData.map(user => {\n            if (user._id === post.posterId) return user.picture;\n          }).join(\"\"),\n          alt: \"poster-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pseudo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: !isEmpty(usersData[0]) && usersData.map(user => {\n                if (user._id === post.posterId) return user.pseudo;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), post.posterId !== userData._id && /*#__PURE__*/_jsxDEV(FollowHandler, {\n              type: \"card\",\n              idToFollow: post.posterId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: dateParser(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), post.picture && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.picture,\n          alt: \"card-pic\",\n          className: \"card-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), post.video && /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"500\",\n          height: \"300\",\n          src: post.video,\n          frameBorder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, post._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"dh6KvsowsNVYAxuHyXPPBtnssO8=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/components/Post/Card.js"],"names":["React","useState","useEffect","useSelector","isEmpty","dateParser","FollowHandler","Card","post","isLoading","setIsLoading","usersData","state","usersReducer","userData","userReducer","map","user","_id","posterId","picture","join","pseudo","createdAt","message","video"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,sBAApC;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMU,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA7B;AACA,QAAMC,QAAQ,GAAGX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACG,WAAlB,CAA5B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,KAACE,OAAO,CAACO,SAAS,CAAC,CAAD,CAAV,CAAR,IAA0BD,YAAY,CAAC,KAAD,CAAtC;AACD,GAFQ,EAEN,CAACC,SAAD,CAFM,CAAT;AAIA,sBACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA,cACGF,SAAS,gBACR;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AACE,UAAA,GAAG,EACD,CAACL,OAAO,CAACO,SAAS,CAAC,CAAD,CAAV,CAAR,IACAA,SAAS,CACNK,GADH,CACQC,IAAD,IAAU;AACb,gBAAIA,IAAI,CAACC,GAAL,KAAaV,IAAI,CAACW,QAAtB,EAAgC,OAAOF,IAAI,CAACG,OAAZ;AACjC,WAHH,EAIGC,IAJH,CAIQ,EAJR,CAHJ;AASE,UAAA,GAAG,EAAC;AATN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACE;AAAA,wBACG,CAACjB,OAAO,CAACO,SAAS,CAAC,CAAD,CAAV,CAAR,IACCA,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAU;AACtB,oBAAIA,IAAI,CAACC,GAAL,KAAaV,IAAI,CAACW,QAAtB,EAAgC,OAAOF,IAAI,CAACK,MAAZ;AACjC,eAFD;AAFJ;AAAA;AAAA;AAAA;AAAA,oBADF,EAOGd,IAAI,CAACW,QAAL,KAAkBL,QAAQ,CAACI,GAA3B,iBACC,QAAC,aAAD;AAAe,cAAA,IAAI,EAAC,MAApB;AAA2B,cAAA,UAAU,EAAEV,IAAI,CAACW;AAA5C;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAA,sBAAOd,UAAU,CAACG,IAAI,CAACe,SAAN;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAA,oBAAIf,IAAI,CAACgB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAfF,EAgBGhB,IAAI,CAACY,OAAL,iBACC;AAAK,UAAA,GAAG,EAAEZ,IAAI,CAACY,OAAf;AAAwB,UAAA,GAAG,EAAC,UAA5B;AAAuC,UAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAjBJ,EAmBGZ,IAAI,CAACiB,KAAL,iBACC;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,MAAM,EAAC,KAFT;AAGE,UAAA,GAAG,EAAEjB,IAAI,CAACiB,KAHZ;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAJJ,KAAoCjB,IAAI,CAACU,GAAzC;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CA5DD;;GAAMX,I;UAEcJ,W,EACDA,W;;;KAHbI,I;AA8DN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty, dateParser } from \"../../Util/functions\";\nimport FollowHandler from \"../profil/FollowHandler\";\n\nconst Card = ({ post }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n\n  useEffect(() => {\n    !isEmpty(usersData[0]) && setIsLoading(false);\n  }, [usersData]);\n\n  return (\n    <li className=\"card-container\" key={post._id}>\n      {isLoading ? (\n        <i className=\"fas fa-spinner fa-spin\"></i>\n      ) : (\n        <>\n          <div className=\"card-left\">\n            <img\n              src={\n                !isEmpty(usersData[0]) &&\n                usersData\n                  .map((user) => {\n                    if (user._id === post.posterId) return user.picture;\n                  })\n                  .join(\"\")\n              }\n              alt=\"poster-pic\"\n            />\n          </div>\n          <div className=\"card-right\">\n            <div className=\"card-header\">\n              <div className=\"pseudo\">\n                <h3>\n                  {!isEmpty(usersData[0]) &&\n                    usersData.map((user) => {\n                      if (user._id === post.posterId) return user.pseudo;\n                    })}\n                </h3>\n                {post.posterId !== userData._id && (\n                  <FollowHandler type=\"card\" idToFollow={post.posterId} />\n                )}\n              </div>\n              <span>{dateParser(post.createdAt)}</span>\n            </div>\n            <p>{post.message}</p>\n            {post.picture && (\n              <img src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\n            )}\n            {post.video && (\n              <iframe\n                width=\"500\"\n                height=\"300\"\n                src={post.video}\n                frameBorder=\"0\"\n              ></iframe>\n            )}\n          </div>\n        </>\n      )}\n    </li>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}