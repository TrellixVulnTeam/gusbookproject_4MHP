{"ast":null,"code":"var _jsxFileName = \"/Users/gus/Documents/work_in_progress/gusbook/client/src/components/profil/UpdateProfil.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unreachable */\nimport React, { useState } from \"react\";\nimport LeftNav from \"../LeftNav\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { capitalize, dateParser } from \"../../Util/functions\";\nimport UploadImg from \"./UploadImg\";\nimport { updateBio } from \"../../actions/user.actions\";\nimport FollowHandler from \"./FollowHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfil = () => {\n  _s();\n\n  const [bio, setBio] = useState(\"\");\n  const [updateForm, setUpdateForm] = useState(false);\n  const userData = useSelector(state => state.userReducer);\n  const usersData = useSelector(state => state.usersReducer);\n  const error = useSelector(state => state.errorReducer.userError);\n  const dispatch = useDispatch();\n  const [followingsPopup, setFollowingsPopup] = useState(false);\n  const [followersPopup, setFollowersPopup] = useState(false);\n\n  const handleUpdate = () => {\n    dispatch(updateBio(userData._id, bio));\n    setUpdateForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profil-container\",\n    children: [/*#__PURE__*/_jsxDEV(LeftNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Profil de \", capitalize(userData.pseudo)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-part\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Smile !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userData.picture,\n          alt: \"profilImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadImg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error.maxSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error.format\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-part\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bio-update\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), updateForm === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setUpdateForm(!updateForm),\n              children: userData.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setUpdateForm(!updateForm),\n              children: \"Modifier Bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), updateForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              defaultValue: userData.bio,\n              onChange: event => setBio(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(),\n              children: \"Valider les modifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Membre depuis le \", dateParser(userData.createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          onClick: () => setFollowingsPopup(true),\n          children: [\"Abonnements :\", \" \", userData.followings ? userData.followings.length : \"0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          onClick: () => setFollowersPopup(true),\n          children: [\"Abonn\\xE9s : \", userData.followers ? userData.followers.length : \"0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), followingsPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-profil-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Abonnements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setFollowingsPopup(false),\n          className: \"cross\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usersData.map(user => {\n            for (let i = 0; i < userData.followings.length; i++) {\n              if (user._id === userData.followings[i]) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user.picture,\n                    alt: \"user-pic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: user.pseudo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"follow-handler\",\n                    children: /*#__PURE__*/_jsxDEV(FollowHandler, {\n                      type: \"suggestion\",\n                      idToFollow: user._id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 25\n                  }, this)]\n                }, user._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this);\n              }\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), followersPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-profil-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Abonn\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setFollowersPopup(false),\n          className: \"cross\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usersData.map(user => {\n            for (let i = 0; i < userData.followers.length; i++) {\n              if (user._id === userData.followers[i]) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user.picture,\n                    alt: \"user-pic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: user.pseudo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"follow-handler\",\n                    children: /*#__PURE__*/_jsxDEV(FollowHandler, {\n                      type: \"suggestion\",\n                      idToFollow: user._id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this)]\n                }, user._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 23\n                }, this);\n              }\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfil, \"jwgqXYb5ZI69abGfWT9NROhdrcs=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = UpdateProfil;\nexport default UpdateProfil;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfil\");","map":{"version":3,"sources":["/Users/gus/Documents/work_in_progress/gusbook/client/src/components/profil/UpdateProfil.js"],"names":["React","useState","LeftNav","useSelector","useDispatch","capitalize","dateParser","UploadImg","updateBio","FollowHandler","UpdateProfil","bio","setBio","updateForm","setUpdateForm","userData","state","userReducer","usersData","usersReducer","error","errorReducer","userError","dispatch","followingsPopup","setFollowingsPopup","followersPopup","setFollowersPopup","handleUpdate","_id","pseudo","picture","maxSize","format","event","target","value","createdAt","followings","length","followers","map","user","i"],"mappings":"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","sourcesContent":["/* eslint-disable no-unreachable */\nimport React, { useState } from \"react\";\nimport LeftNav from \"../LeftNav\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { capitalize, dateParser } from \"../../Util/functions\";\nimport UploadImg from \"./UploadImg\";\nimport { updateBio } from \"../../actions/user.actions\";\nimport FollowHandler from \"./FollowHandler\";\n\nconst UpdateProfil = () => {\n  const [bio, setBio] = useState(\"\");\n  const [updateForm, setUpdateForm] = useState(false);\n  const userData = useSelector((state) => state.userReducer);\n  const usersData = useSelector((state) => state.usersReducer);\n  const error = useSelector((state) => state.errorReducer.userError);\n\n  const dispatch = useDispatch();\n  const [followingsPopup, setFollowingsPopup] = useState(false);\n  const [followersPopup, setFollowersPopup] = useState(false);\n\n  const handleUpdate = () => {\n    dispatch(updateBio(userData._id, bio));\n    setUpdateForm(false);\n  };\n\n  return (\n    <div className=\"profil-container\">\n      <LeftNav />\n      <h1>Profil de {capitalize(userData.pseudo)}</h1>\n      <div className=\"update-container\">\n        <div className=\"left-part\">\n          <h3>Smile !</h3>\n          <img src={userData.picture} alt=\"profilImage\" />\n          <UploadImg />\n          <p>{error.maxSize}</p>\n          <p>{error.format}</p>\n        </div>\n        <div className=\"right-part\">\n          <div className=\"bio-update\">\n            <h3>Bio</h3>\n            {updateForm === false && (\n              <>\n                <p onClick={() => setUpdateForm(!updateForm)}>{userData.bio}</p>\n                <button onClick={() => setUpdateForm(!updateForm)}>\n                  Modifier Bio\n                </button>\n              </>\n            )}\n            {updateForm && (\n              <>\n                <textarea\n                  type=\"text\"\n                  defaultValue={userData.bio}\n                  onChange={(event) => setBio(event.target.value)}\n                ></textarea>\n                <button onClick={() => handleUpdate()}>\n                  Valider les modifications\n                </button>\n              </>\n            )}\n          </div>\n          <h4>Membre depuis le {dateParser(userData.createdAt)}</h4>\n          <h5 onClick={() => setFollowingsPopup(true)}>\n            Abonnements :{\" \"}\n            {userData.followings ? userData.followings.length : \"0\"}\n          </h5>\n          <h5 onClick={() => setFollowersPopup(true)}>\n            Abonnés : {userData.followers ? userData.followers.length : \"0\"}\n          </h5>\n        </div>\n      </div>\n      {followingsPopup && (\n        <div className=\"popup-profil-container\">\n          <div className=\"modal\">\n            <h3>Abonnements</h3>\n            <span onClick={() => setFollowingsPopup(false)} className=\"cross\">\n              &#10005;\n            </span>\n            <ul>\n              {usersData.map((user) => {\n                for (let i = 0; i < userData.followings.length; i++) {\n                  if (user._id === userData.followings[i]) {\n                    return (\n                      <li key={user._id}>\n                        <img src={user.picture} alt=\"user-pic\" />\n                        <h4>{user.pseudo}</h4>\n                        <div className=\"follow-handler\">\n                          <FollowHandler\n                            type=\"suggestion\"\n                            idToFollow={user._id}\n                          />\n                        </div>\n                      </li>\n                    );\n                  }\n                }\n                return null;\n              })}\n            </ul>\n          </div>\n        </div>\n      )}\n      {followersPopup && (\n        <div className=\"popup-profil-container\">\n          <div className=\"modal\">\n            <h3>Abonnés</h3>\n            <span onClick={() => setFollowersPopup(false)} className=\"cross\">\n              &#10005;\n            </span>\n            <ul>\n              {usersData.map((user) => {\n                for (let i = 0; i < userData.followers.length; i++) {\n                  if (user._id === userData.followers[i]) {\n                    return (\n                      <li key={user._id}>\n                        <img src={user.picture} alt=\"user-pic\" />\n                        <h4>{user.pseudo}</h4>\n                        <div className=\"follow-handler\">\n                          <FollowHandler\n                            type=\"suggestion\"\n                            idToFollow={user._id}\n                          />\n                        </div>\n                      </li>\n                    );\n                  }\n                }\n                return null;\n              })}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateProfil;\n"]},"metadata":{},"sourceType":"module"}